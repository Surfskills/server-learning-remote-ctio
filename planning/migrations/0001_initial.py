# Generated by Django 4.2.17 on 2025-06-16 18:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CalendarEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('event_type', models.CharField(choices=[('release', 'Content Release'), ('meeting', 'Live Meeting'), ('assignment', 'Assignment'), ('quiz', 'Quiz'), ('lecture', 'Lecture')], max_length=20)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('is_all_day', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('meeting_url', models.URLField(blank=True, max_length=500, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('attendees', models.ManyToManyField(blank=True, related_name='calendar_events', to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calendar_events', to='courses.course')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_events', to=settings.AUTH_USER_MODEL)),
                ('related_lecture', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='courses.lecture')),
            ],
            options={
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='DripSchedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('fixed', 'Fixed Dates'), ('relative', 'Relative to Enrollment')], max_length=10)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drip_schedules', to='courses.course')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DripScheduleEntry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('day_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('release_date', models.DateTimeField(blank=True, null=True)),
                ('lecture', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drip_entries', to='courses.lecture')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='planning.dripschedule')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drip_entries', to='courses.coursesection')),
            ],
            options={
                'verbose_name_plural': 'Drip schedule entries',
                'ordering': ['day_offset', 'release_date'],
            },
        ),
        migrations.CreateModel(
            name='CalendarPermissions',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('can_create_events', models.BooleanField(default=False)),
                ('can_edit_events', models.BooleanField(default=False)),
                ('can_delete_events', models.BooleanField(default=False)),
                ('can_view_all_courses', models.BooleanField(default=False)),
                ('allowed_course_ids', models.JSONField(default=list)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='calendar_permissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Calendar permissions',
            },
        ),
        migrations.CreateModel(
            name='CalendarNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('reminder', 'Reminder'), ('update', 'Update'), ('cancellation', 'Cancellation')], max_length=20)),
                ('message', models.TextField()),
                ('scheduled_for', models.DateTimeField()),
                ('sent', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='planning.calendarevent')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calendar_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['scheduled_for'],
            },
        ),
        migrations.CreateModel(
            name='StudentProgressControl',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_auto_release_enabled', models.BooleanField(default=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_controls', to='courses.course')),
                ('locked_lectures', models.ManyToManyField(blank=True, related_name='locked_for', to='courses.lecture')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_controls', to=settings.AUTH_USER_MODEL)),
                ('unlocked_lectures', models.ManyToManyField(blank=True, related_name='unlocked_for', to='courses.lecture')),
            ],
            options={
                'unique_together': {('student', 'course')},
            },
        ),
        migrations.CreateModel(
            name='PlannedCourseRelease',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('release_date', models.DateTimeField()),
                ('is_released', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planned_releases', to='courses.course')),
                ('lecture', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='releases', to='courses.lecture')),
                ('related_event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='releases', to='planning.calendarevent')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='releases', to='courses.coursesection')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planned_releases', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['release_date'],
                'unique_together': {('course', 'student', 'section', 'lecture')},
            },
        ),
    ]
