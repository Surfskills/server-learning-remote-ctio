# Generated by Django 4.2.17 on 2025-06-16 18:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('instructions', models.TextField()),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('points_possible', models.PositiveIntegerField(default=10)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to='courses.course')),
                ('lecture', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quizzes', to='courses.lecture')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quizzes', to='courses.coursesection')),
            ],
            options={
                'verbose_name_plural': 'Quizzes',
                'ordering': ['due_date'],
            },
        ),
        migrations.CreateModel(
            name='QuizGrade',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('overall_score', models.FloatField()),
                ('feedback', models.TextField(blank=True, null=True)),
                ('graded_at', models.DateTimeField(auto_now_add=True)),
                ('graded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assessments_graded_quizzes', to=settings.AUTH_USER_MODEL)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='assessments.quiz')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments_quiz_grades', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-graded_at'],
                'unique_together': {('quiz', 'student')},
            },
        ),
        migrations.CreateModel(
            name='QuizSubmission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('text_response', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('graded', 'Graded'), ('needs_revision', 'Needs Revision')], default='submitted', max_length=20)),
                ('grade', models.FloatField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('instructor_notes', models.TextField(blank=True, null=True)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='assessments.quiz')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments_quiz_submissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-submitted_at'],
                'unique_together': {('student', 'quiz')},
            },
        ),
        migrations.CreateModel(
            name='QuizTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('question', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('required', models.BooleanField(default=True)),
                ('accepts_files', models.BooleanField(default=False)),
                ('accepted_file_types', models.JSONField(blank=True, null=True)),
                ('max_file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('max_files', models.PositiveIntegerField(blank=True, null=True)),
                ('accepts_text', models.BooleanField(default=False)),
                ('sample_answer', models.TextField(blank=True, null=True)),
                ('points', models.PositiveIntegerField(default=10)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='assessments.quiz')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaskGrade',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('score', models.FloatField()),
                ('feedback', models.TextField(blank=True, null=True)),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_grades', to='assessments.quizgrade')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='assessments.quiztask')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubmissionFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('url', models.URLField(max_length=500)),
                ('type', models.CharField(choices=[('video', 'Video'), ('pdf', 'PDF'), ('image', 'Image'), ('audio', 'Audio'), ('document', 'Document'), ('code', 'Code')], max_length=10)),
                ('name', models.CharField(max_length=200)),
                ('size', models.PositiveIntegerField()),
                ('mime_type', models.CharField(max_length=100)),
                ('thumbnail_url', models.URLField(blank=True, max_length=500, null=True)),
                ('duration', models.PositiveIntegerField(blank=True, null=True)),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='assessments.quizsubmission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuizQuestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('question', models.TextField()),
                ('options', models.JSONField()),
                ('correct_option_index', models.PositiveIntegerField()),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='assessments.quiz')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='GradingCriterion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField()),
                ('points', models.PositiveIntegerField()),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grading_criteria', to='assessments.quiztask')),
            ],
            options={
                'verbose_name_plural': 'Grading Criteria',
            },
        ),
        migrations.CreateModel(
            name='CriteriaGrade',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('awarded_points', models.PositiveIntegerField()),
                ('comments', models.TextField(blank=True, null=True)),
                ('criterion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='assessments.gradingcriterion')),
                ('task_grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='criteria_grades', to='assessments.taskgrade')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
